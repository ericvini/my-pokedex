{"version":3,"sources":["data.js","Pokemon.js","Button.js","Pokedex.js","App.js","reportWebVitals.js","index.js"],"names":["pokemons","id","name","type","averageWeight","value","measurementUnit","image","moreInfo","Pokemon","this","props","pokemon","className","src","alt","Component","Button","children","disabled","onClick","Pokedex","state","pokemonIndex","filteredType","setState","numberOfPokemons","filter","Set","reduce","types","filteredPokemons","fetchFilteredPokemons","pokemonTypes","fetchPokemonTypes","filterPokemons","map","nextPokemon","length","React","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7aa3a9c.chunk.js","sourcesContent":["const pokemons = [\n  {\n      id: 25,\n      name: \"Pikachu\",\n      type: 'Electric',\n      averageWeight: {\n          value: 6.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/b/b2/Spr_5b_025_m.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Pikachu_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 4,\n      name: \"Charmander\",\n      type: 'Fire',\n      averageWeight: {\n          value: 8.5,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/0/0a/Spr_5b_004.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Charmander_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 10,\n      name: \"Caterpie\",\n      type: 'Bug',\n      averageWeight: {\n          value: 2.9,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/8/83/Spr_5b_010.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Caterpie_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 23,\n      name: \"Ekans\",\n      type: 'Poison',\n      averageWeight: {\n          value: 6.9,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/1/18/Spr_5b_023.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Ekans_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 65,\n      name: \"Alakazam\",\n      type: 'Psychic',\n      averageWeight: {\n          value: 48.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/8/88/Spr_5b_065_m.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Alakazam_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 151,\n      name: \"Mew\",\n      type: 'Psychic',\n      averageWeight: {\n          value: 4.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/4/43/Spr_5b_151.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Mew_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 78,\n      name: \"Rapidash\",\n      type: 'Fire',\n      averageWeight: {\n          value: 95.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/5/58/Spr_5b_078.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Rapidash_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 143,\n      name: \"Snorlax\",\n      type: 'Normal',\n      averageWeight: {\n          value: 460.0,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/4/40/Spr_5b_143.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Snorlax_(Pok%C3%A9mon)\"\n  },\n  {\n      id: 148,\n      name: \"Dragonair\",\n      type: 'Dragon',\n      averageWeight: {\n          value: 16.5,\n          measurementUnit: \"kg\"\n      },\n      image: \"https:\\/\\/cdn.bulbagarden.net/upload/2/2c/Spr_5b_148.png\",\n      moreInfo: \"https:\\/\\/bulbapedia.bulbagarden.net/wiki/Dragonair_(Pok%C3%A9mon)\"\n  }\n];\n\nexport default pokemons;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Pokemon extends Component {\n  render() {\n    const { name, type, averageWeight, image } = this.props.pokemon;\n\n    return (\n      <div className='pokemon'>\n        <div>\n          <p>{name}</p>\n          <p>{type}</p>\n          <p>{`Average weight:${averageWeight.value} ${averageWeight.measurementUnit}`}</p>\n        </div>\n        <img src={image} alt={`${name} sprite`} />\n      </div>\n    )\n  }\n\n}\n  Pokemon.propTypes = {\n    pokemon: PropTypes.shape({\n      name: PropTypes.string,\n      type: PropTypes.string,\n      averageWeight: PropTypes.shape({\n        measurementUnit: PropTypes.string,\n        value: PropTypes.number\n      }),\n      image: PropTypes.string,\n    }).isRequired,\n  };\n\n  export default Pokemon;\n\n\n\n\n\n\n","import React from \"react\";\nimport \"./button.css\";\n\nconst Button = ({ className, children, disabled, onClick }) => (\n  <button\n    onClick={onClick}\n    className={`button-text ${className}`}\n    disabled={disabled}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;","import React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './Button';\nimport './pokedex.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {pokemonIndex: 0, filteredType: 'all'};\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({filteredType, pokemonIndex: 0});\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons,\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const {pokemons} = this.props;\n    const {filteredType} = this.state;\n\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const {pokemons} = this.props;\n\n    return [...new Set(pokemons.reduce((types, {type}) => [...types, type], []))];\n  }\n\n  render() {\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const pokemonTypes = this.fetchPokemonTypes();\n    const pokemon = filteredPokemons[this.state.pokemonIndex];\n\n    return (\n      <div className=\"pokedex\">\n        <Pokemon pokemon={pokemon} />\n        <div className=\"pokedex-buttons-panel\">\n          <Button\n            onClick={() => this.filterPokemons('all')}\n            className=\"filter-button\">\n            All\n          </Button>\n          {pokemonTypes.map(type => (\n            <Button\n              key={type}\n              onClick={() => this.filterPokemons(type)}\n              className=\"filter-button\">\n              {type}\n            </Button>\n          ))}\n        </div>\n        <Button\n          className=\"pokedex-button\"\n          onClick={() => this.nextPokemon(filteredPokemons.length)}\n          disabled={filteredPokemons.length <= 1}>\n          Próximo pokémon\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Pokedex;","import React from 'react';\nimport './App.css';\nimport pokemons from './data';\nimport Pokedex from './Pokedex';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1> Pokedex </h1>\n      <Pokedex pokemons={pokemons} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}